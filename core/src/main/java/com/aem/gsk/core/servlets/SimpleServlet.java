/*
 *  Copyright 2015 Adobe Systems Incorporated
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
package com.aem.gsk.core.servlets;

import org.apache.commons.httpclient.DefaultHttpMethodRetryHandler;
import org.apache.commons.httpclient.HttpClient;
import org.apache.commons.httpclient.HttpMethod;
import org.apache.commons.httpclient.HttpStatus;
import org.apache.commons.httpclient.methods.GetMethod;
import org.apache.commons.httpclient.params.HttpMethodParams;
import org.apache.felix.scr.annotations.Property;
import org.apache.felix.scr.annotations.Reference;
import org.apache.felix.scr.annotations.sling.SlingServlet;
import org.apache.sling.api.SlingHttpServletRequest;
import org.apache.sling.api.SlingHttpServletResponse;
import org.apache.sling.api.resource.Resource;
import org.apache.sling.api.servlets.SlingAllMethodsServlet;
import org.apache.sling.api.servlets.SlingSafeMethodsServlet;
import org.apache.sling.jcr.api.SlingRepository;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import javax.jcr.Node;
import javax.jcr.PathNotFoundException;
import javax.jcr.RepositoryException;
import javax.jcr.Session;
import javax.servlet.ServletException;

import java.io.IOException;

/**
 * Servlet that writes some sample content into the response. It is mounted for
 * all resources of a specific Sling resource type. The
 * {@link SlingSafeMethodsServlet} shall be used for HTTP methods that are
 * idempotent. For write operations use the {@link SlingAllMethodsServlet}.
 */
@SlingServlet(paths="/bin/mySearchServlet", methods = "GET", metatype=true)
@Property(name = "sling.auth.requirements", value = "-/bin/mySearchServlet")
public class SimpleServlet extends SlingAllMethodsServlet {

	
	/** Default log. */
    protected final Logger log = LoggerFactory.getLogger(this.getClass());
    
    @Reference
    private SlingRepository repository;
      
    public void bindRepository(SlingRepository repository) {
           this.repository = repository; 
           }
    
    @Override
    protected void doGet(final SlingHttpServletRequest req,
            final SlingHttpServletResponse resp) throws ServletException, IOException {
    	Session session = req.getResource().getResourceResolver().adaptTo(Session.class);
    	resp.setContentType("application/json");
    	resp.setCharacterEncoding("UTF-8");
    	
//    	HttpClient client = new HttpClient();
//        HttpMethod method = new GetMethod("http://10.100.100.41:8082/api/v1/product/productlist");
//        method.addRequestHeader("Authorization", "Bearer 3c28ad63e86140c59ff1845f4582f248");
    	//Provide custom retry handler is necessary
//         method.getParams().setParameter(HttpMethodParams.RETRY_HANDLER,    new DefaultHttpMethodRetryHandler(3, false));
    	try {
//    		int statusCode = client.executeMethod(method);
//    		if (statusCode != HttpStatus.SC_OK) {
//              log.info("HTTP Method failed: >>>>>>>>>>>>>>>>>>>>>>>>>>>" + method.getStatusLine());
//            }
//           // Read the response body.
//          byte[] responseBody = method.getResponseBody();
			Node n = session.getNode("/content/GSK/jcr:content");
			System.out.println("NODE NAME: >>>>>>>>>>>>>>>>>>>>>>>>>>>" + n);
			log.info("NODE NAME: >>>>>>>>>>>>>>>>>>>>>>>>>>>" + n);
			n.setProperty("abc", "xyz");
			//n.setProperty("nodeOut", new String(responseBody));
			
			Node ad=n.addNode("testNode");
			Node parent = ad.getParent();
			Node title = parent.getNode("jcr:title");
			
			System.out.println("NODE TITLE: >>>>>>>>>>>>>>>>>>>>>>>>>>>" + title);
			log.info("NODE TITLE: >>>>>>>>>>>>>>>>>>>>>>>>>>>" + title);
			
			
			//ad.setProperty("booleandata", true);
			//ad.setProperty("myproperty", new String(responseBody));
			
			//resp.getWriter().write(new String(responseBody));
		} catch (PathNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (RepositoryException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
    	
//        final Resource resource = req.getResource();
//        resp.getOutputStream().println(resource.toString());
//        resp.getOutputStream().println(
//                "This content is generated by the SimpleServlet");
    }
}
